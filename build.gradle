/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */

plugins {
    id "org.jetbrains.kotlin.jvm" version "1.2.61"
    id "org.jetbrains.kotlin.kapt" version "1.2.61"
}

allprojects {
    group = "me.hchome"
    version = "1.0.0"


    repositories {
        jcenter()
        mavenCentral()
    }
}

subprojects {
    apply plugin: "java"
    apply plugin: "kotlin"
    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
        compile "org.jetbrains.kotlin:kotlin-reflect"
    }

    sourceCompatibility = "1.8"
    targetCompatibility = "1.8"

    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
}

project(":example-service-lib") {
    apply plugin: "kotlin-kapt"

    sourceSets {
        main.java.srcDirs += "$buildDir/generated/source/kapt/main"
        main.kotlin.srcDirs += "$buildDir/generated/source/kaptKotlin/main"
    }

    dependencies {
        kapt "io.vertx:vertx-service-proxy:3.5.3:processor"
        kapt "io.vertx:vertx-codegen:3.5.3:processor"
        compile "io.vertx:vertx-service-proxy:3.5.3"
        compile "io.vertx:vertx-codegen:3.5.3"
    }
}

configure(subprojects.findAll { it.name != "example-service-lib" }.collect()) {
    kotlin { experimental { coroutines 'enable' } }
    dependencies {
        compile project(':example-service-lib')
        compile "io.vertx:vertx-core:3.5.3"
        compile "io.vertx:vertx-lang-kotlin:3.5.3"
        compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:0.25.0"
        compile "io.vertx:vertx-lang-kotlin-coroutines:3.5.3"
        compile "io.vertx:vertx-hazelcast:3.5.3"
        compile "io.vertx:vertx-service-discovery:3.5.3"
        compile "io.vertx:vertx-circuit-breaker:3.5.3"
        compile "io.vertx:vertx-service-proxy:3.5.3"
        testCompile group: 'junit', name: 'junit', version: '4.12'
    }

    jar {
        manifest {
            attributes "Main-Class": "io.vertx.core.Launcher"
        }
        from {
            configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        }
    }
}

